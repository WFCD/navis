name: Release
on:
  workflow_call:

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4.1.1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          semantic_version: 24.2.0

      - name: Bump version
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          NEW_RELEASE: ${{ steps.semantic.outputs.new_release_version }}
        run: |
          version=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          version_code=$(echo $version | sed 's/.*+//')

          new_version="${NEW_RELEASE}+$((version_code + 1))"

          sed -i "s/^version: .*/version: ${new_version}/" pubspec.yaml

        
      - name: Create Release
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 
          RELEASE_NOTES: ${{ steps.semantic.outputs.new_release_notes}}
          NEW_RELEASE: ${{ steps.semantic.outputs.new_release_version }}
          PRERELEASE: ${{ contains(steps.semantic.outputs.new_release_channel, 'beta') }}
        run: |
          git config user.name "${{ secrets.GIT_COMITTER_NAME }}"
          git config user.email "${{ secrets.GIT_COMITTER_EMAIL }}"
          git add pubspec.yaml

          MESSAGE="chore(release): $NEW_RELEASE [skip ci]\n\n$RELEASE_NOTES"
          git commit -m "$MESSAGE" --no-verify
          COMMIT_SHA=$(git rev-parse HEAD)
          git push

          # Github CLI will auto create the tag with --target
          gh release create "v$NEW_RELEASE" --title "v$NEW_RELEASE" --notes "$RELEASE_NOTES" \
          --target "$COMMIT_SHA" $([ "$PRERELEASE" = "true" ] && echo "--prerelease")


    